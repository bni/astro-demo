---
import { Resource } from "sst";
import { getSignedUrl } from "@aws-sdk/s3-request-presigner";
import { S3Client, ListObjectsV2Command, GetObjectCommand } from "@aws-sdk/client-s3";

// noinspection TypeScriptUnresolvedReference
const bucket = Resource.MyBucket.name;

const client = new S3Client();

const listCommand = new ListObjectsV2Command({
  Bucket: bucket
});

// noinspection TypeScriptValidateTypes
const { Contents } = await client.send(listCommand);

const urls = [];

for (const content of Contents!) {
  const getObjectCommand = new GetObjectCommand({
    Bucket: bucket,
    Key: content.Key
  });

  const url = await getSignedUrl(new S3Client(), getObjectCommand);

  urls.push(url);
}
---

<div class="grid">
  <div class="grid-sizer"></div>
  {urls.map((url) => (
    <div class="grid-item"><img src={url} alt=""></div>
  ))}
</div>

<style>
  .grid {
    background: #000;
  }

  .grid:after {
    content: '';
    display: block;
    clear: both;
  }

  .grid-sizer,
  .grid-item {
    width: 33.333%;
  }

  .grid-item {
    float: left;
  }

  .grid-item img {
    display: block;
    max-width: 100%;
  }
</style>

<script>
  import Masonry from "masonry-layout";
  import imagesLoaded from "imagesloaded";

  const grid = document.querySelector('.grid');

  const masonry = new Masonry(grid, {
    itemSelector: '.grid-item',
    columnWidth: '.grid-sizer',
    percentPosition: true
  });

  imagesLoaded(grid).on('progress', function() {
    masonry.layout();
  });
</script>
